namespace = mmgsiege

# main event, checks resource balances and progresses shortages
country_event = {
	id = mmgsiege.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# check resource shortages on besieged planets
		every_owned_planet = {
			limit = {
				mmgsiege_is_under_siege = yes
				is_occupied_flag = no
			}
			mmgsiege_check_for_and_update_resource_shortage = { RESOURCE = food }
			mmgsiege_check_for_and_update_resource_shortage = { RESOURCE = minerals }
			mmgsiege_check_for_and_update_resource_shortage = { RESOURCE = energy }
			mmgsiege_check_for_and_update_resource_shortage = { RESOURCE = consumer_goods }
			mmgsiege_create_or_remove_shortage_modifiers = yes
			mmgsiege_update_planet_status = yes
		}

		# recover resource shortages on planets not under siege
		every_owned_planet = {
			limit = {
				OR = {
					has_planet_flag = mmgsiege_food_shortage
					has_planet_flag = mmgsiege_minerals_shortage
					has_planet_flag = mmgsiege_energy_shortage
					has_planet_flag = mmgsiege_consumer_goods_shortage
					has_planet_flag = mmgsiege_under_siege
				}
				mmgsiege_is_under_siege = no
			}
			mmgsiege_check_for_and_update_resource_shortage_no_siege = { RESOURCE = food }
			mmgsiege_check_for_and_update_resource_shortage_no_siege = { RESOURCE = minerals }
			mmgsiege_check_for_and_update_resource_shortage_no_siege = { RESOURCE = energy }
			mmgsiege_check_for_and_update_resource_shortage_no_siege = { RESOURCE = consumer_goods }
			mmgsiege_create_or_remove_shortage_modifiers = yes
			mmgsiege_update_planet_status = yes
		}

		# clear resource shortages on occupied planets
		every_owned_planet = {
			limit = {
				OR = {
					has_planet_flag = mmgsiege_food_shortage
					has_planet_flag = mmgsiege_minerals_shortage
					has_planet_flag = mmgsiege_energy_shortage
					has_planet_flag = mmgsiege_consumer_goods_shortage
				}
				is_occupied_flag = yes
			}
			while = {
				count = 4
				mmgsiege_decrease_resource_shortage = { RESOURCE = energy }
				mmgsiege_decrease_resource_shortage = { RESOURCE = minerals }
				mmgsiege_decrease_resource_shortage = { RESOURCE = food }
				mmgsiege_decrease_resource_shortage = { RESOURCE = consumer_goods }
			}
			mmgsiege_create_or_remove_shortage_modifiers = yes
		}

		# # clean up temporary generals that are no longer needed
		# every_owned_leader = {
		# 	limit = {
		# 		has_trait = mmgsiege_leader_trait_temporary_general
		# 		mmgsiege_general_is_on_planet_with_army_supply_shortage = no
		# 	}
		# 	set_leader_flag = mmgsiege_killing_temporary_general
		# 	kill_leader = { show_notification = no }
		# }

		# # clean up under supplied traits that are no longer valid
		# every_owned_leader = {
		# 	limit = {
		# 		leader_class = general
		# 		OR = {
		# 			has_trait = mmgsiege_leader_trait_under_supplied_1
		# 			has_trait = mmgsiege_leader_trait_under_supplied_2
		# 			has_trait = mmgsiege_leader_trait_under_supplied_3
		# 			has_trait = mmgsiege_leader_trait_under_supplied_4
		# 			has_trait = mmgsiege_leader_trait_under_supplied_5
		# 			has_trait = mmgsiege_leader_trait_under_supplied_6
		# 			has_trait = mmgsiege_leader_trait_under_supplied_7
		# 			has_trait = mmgsiege_leader_trait_under_supplied_8
		# 			has_trait = mmgsiege_leader_trait_under_supplied_9
		# 			has_trait = mmgsiege_leader_trait_under_supplied_10
		# 		}
		# 		mmgsiege_general_is_on_planet_with_army_supply_shortage = no
		# 	}
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_1
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_2
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_3
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_4
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_5
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_6
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_7
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_8
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_9
		# 	remove_trait = mmgsiege_leader_trait_under_supplied_10
		# }
	}
}

# stockpile events
# calc stockpile max
planet_event = {
	id = mmgsiege.11
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		mmgsiege_calculate_stockpile_maximum = yes
	}
}

# init stockpile vars
planet_event = {
	id = mmgsiege.12
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { NOT = { is_variable_set = mmgsiege_energy_stockpile } }
			set_variable = {
				which = mmgsiege_energy_stockpile
				value = 0
			}
		}
		if = {
			limit = { NOT = { is_variable_set = mmgsiege_minerals_stockpile } }
			set_variable = {
				which = mmgsiege_minerals_stockpile
				value = 0
			}
		}
		if = {
			limit = { NOT = { is_variable_set = mmgsiege_food_stockpile } }
			set_variable = {
				which = mmgsiege_food_stockpile
				value = 0
			}
		}
		if = {
			limit = { NOT = { is_variable_set = mmgsiege_consumer_goods_stockpile } }
			set_variable = {
				which = mmgsiege_consumer_goods_stockpile
				value = 0
			}
		}
	}
}

event = {
	id = mmgsiege.13
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			every_owned_planet = {
				planet_event = { id = mmgsiege.11 } # init stockpile maximum
				planet_event = { id = mmgsiege.12 } # init stockpile resources
			}
		}
	}
}

# update planet status on_system_controller_changed
system_event = {
	id = mmgsiege.31
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_system_planet = {
			limit = { is_colony = yes }
			mmgsiege_update_planet_status = yes
		}
	}
}

# update planet status on_planet_transfer on_planet_occupied
planet_event = {
	id = mmgsiege.32
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				OR = {
					has_planet_flag = mmgsiege_food_shortage
					has_planet_flag = mmgsiege_minerals_shortage
					has_planet_flag = mmgsiege_energy_shortage
					has_planet_flag = mmgsiege_consumer_goods_shortage
				}
				is_occupied_flag = yes
			}
			while = {
				count = 4
				mmgsiege_decrease_resource_shortage = { RESOURCE = energy }
				mmgsiege_decrease_resource_shortage = { RESOURCE = minerals }
				mmgsiege_decrease_resource_shortage = { RESOURCE = food }
				mmgsiege_decrease_resource_shortage = { RESOURCE = consumer_goods }
			}
		}
		mmgsiege_update_planet_status = yes
	}
}

# clean up siege/shortage modifiers and features on_planet_ownerless on_colony_destroyed
planet_event = {
	id = mmgsiege.33
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		mmgsiege_remove_siege_modifier = yes
		while = {
			count = 4
			mmgsiege_decrease_resource_shortage = { RESOURCE = energy }
			mmgsiege_decrease_resource_shortage = { RESOURCE = minerals }
			mmgsiege_decrease_resource_shortage = { RESOURCE = food }
			mmgsiege_decrease_resource_shortage = { RESOURCE = consumer_goods }
		}
		mmgsiege_create_or_remove_shortage_modifiers = yes
	}
}

# update planet status on_planet_attackers_win
country_event = {
	id = mmgsiege.34
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		fromfrom = {
			mmgsiege_update_planet_status = yes
		}
	}
}

# fallback to occasionally clean up ownerless planets if various on_actions don't catch it
country_event = {
	id = mmgsiege.35
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_galaxy_planet = {
			limit = {
				has_planet_flag = mmgsiege_under_siege
				NOT = { exists = owner }
			}
			mmgsiege_update_planet_status = yes
			planet_event = { id = mmgsiege.33 }
		}
	}
}

# delay wrapper for the above
event = {
	id = mmgsiege.36
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		event_target:global_event_country = {
			country_event = {
				id = mmgsiege.35
				days = 10
			}
		}
	}
}

# # on_leader_unassigned
# leader_event = {
# 	id = mmgsiege.42
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		leader_class = general
# 		exists = owner
# 	}
# 	immediate = {
# 		owner = {
# 			if = {
# 				limit = { NOT = { has_country_flag = mmgsiege_leader_cleanup_scheduled } }
# 				set_country_flag = mmgsiege_leader_cleanup_scheduled
# 				country_event = {
# 					id = mmgsiege.45
# 					days = 1
# 				}
# 			}
# 		}
# 		# remove under supplied trait
# 		remove_trait = mmgsiege_leader_trait_under_supplied_1
# 		remove_trait = mmgsiege_leader_trait_under_supplied_2
# 		remove_trait = mmgsiege_leader_trait_under_supplied_3
# 		remove_trait = mmgsiege_leader_trait_under_supplied_4
# 		remove_trait = mmgsiege_leader_trait_under_supplied_5
# 		remove_trait = mmgsiege_leader_trait_under_supplied_6
# 		remove_trait = mmgsiege_leader_trait_under_supplied_7
# 		remove_trait = mmgsiege_leader_trait_under_supplied_8
# 		remove_trait = mmgsiege_leader_trait_under_supplied_9
# 		remove_trait = mmgsiege_leader_trait_under_supplied_10
# 		# kill unassigned temporary generals
# 		if = {
# 			limit = { has_trait = mmgsiege_leader_trait_temporary_general }
# 			set_leader_flag = mmgsiege_killing_temporary_general
# 			kill_leader = { show_notification = no }
# 		}
# 	}
# }

# # on_leader_assigned
# leader_event = {
# 	id = mmgsiege.43
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		leader_class = general
# 		exists = owner
# 	}
# 	immediate = {
# 		if = {
# 			limit = { mmgsiege_general_is_on_planet_with_army_supply_shortage = no }
# 			if = {
# 				# kill temporary leader
# 				limit = { has_trait = mmgsiege_leader_trait_temporary_general }
# 				set_leader_flag = mmgsiege_killing_temporary_general
# 				kill_leader = { show_notification = no }
# 			} else = {
# 				# remove under supplied trait
# 				remove_trait = mmgsiege_leader_trait_under_supplied_1
# 				remove_trait = mmgsiege_leader_trait_under_supplied_2
# 				remove_trait = mmgsiege_leader_trait_under_supplied_3
# 				remove_trait = mmgsiege_leader_trait_under_supplied_4
# 				remove_trait = mmgsiege_leader_trait_under_supplied_5
# 				remove_trait = mmgsiege_leader_trait_under_supplied_6
# 				remove_trait = mmgsiege_leader_trait_under_supplied_7
# 				remove_trait = mmgsiege_leader_trait_under_supplied_8
# 				remove_trait = mmgsiege_leader_trait_under_supplied_9
# 				remove_trait = mmgsiege_leader_trait_under_supplied_10
# 			}
# 		}
# 		owner = {
# 			random_owned_planet = {
# 				limit = {
# 					mmgsiege_planet_has_army_supply_shortage = yes
# 					exists = army_leader
# 					OR = {
# 						army_leader = { is_same_value = root }
# 						any_planet_army = {
# 							exists = leader
# 							leader = { is_same_value = root }
# 						}
# 						any_ground_combat_defender = {
# 							exists = leader
# 							leader = { is_same_value = root }
# 						}
# 					}
# 				}
# 				root = {
# 					# scripted effect assumes prev is planet
# 					mmgsiege_add_under_supplied_general_trait = yes
# 				}
# 				# check for temp general that needs to be removed
# 				if = {
# 					limit = { NOT = { has_planet_flag = mmgsiege_assigning_temporary_general } }
# 					random_planet_army = {
# 						limit = {
# 							exists = leader
# 							leader = { has_trait = mmgsiege_leader_trait_temporary_general }
# 						}
# 						leader = {
# 							set_leader_flag = mmgsiege_killing_temporary_general
# 							kill_leader = { show_notification = no }
# 						}
# 					}
# 					random_ground_combat_defender = {
# 						limit = {
# 							exists = leader
# 							leader = { has_trait = mmgsiege_leader_trait_temporary_general }
# 						}
# 						leader = {
# 							set_leader_flag = mmgsiege_killing_temporary_general
# 							kill_leader = { show_notification = no }
# 						}
# 					}
# 				}
# 			}
# 			if = {
# 				limit = { NOT = { has_country_flag = mmgsiege_leader_cleanup_scheduled } }
# 				set_country_flag = mmgsiege_leader_cleanup_scheduled
# 				country_event = {
# 					id = mmgsiege.45
# 					days = 1
# 				}
# 			}
# 		}
# 	}
# }

# # on_leader_death
# # on_leader_fired
# # from = leader
# country_event = {
# 	id = mmgsiege.44
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		from = {
# 			leader_class = general
# 			NOT = { has_leader_flag = mmgsiege_killing_temporary_general }
# 		}
# 	}
# 	immediate = {
# 		if = {
# 			limit = { NOT = { has_country_flag = mmgsiege_leader_cleanup_scheduled } }
# 			set_country_flag = mmgsiege_leader_cleanup_scheduled
# 			country_event = {
# 				id = mmgsiege.45
# 				days = 1
# 			}
# 		}
# 		every_owned_planet = {
# 			limit = {
# 				OR = {
# 					NOT = { exists = army_leader }
# 					army_leader = { is_same_value = from }
# 				}
# 				mmgsiege_planet_has_army_supply_shortage = yes
# 				is_occupied_flag = no
# 			}
# 			mmgsiege_assign_temporary_general = yes
# 		}
# 	}
# }

# # clean up
# country_event = {
# 	id = mmgsiege.45
# 	hide_window = yes
# 	is_triggered_only = yes
# 	immediate = {
# 		remove_country_flag = mmgsiege_leader_cleanup_scheduled
# 		# check for planets that need temporary general
# 		every_owned_planet = {
# 			limit = {
# 				is_occupied_flag = no
# 				mmgsiege_planet_has_army_supply_shortage = yes
# 				NOT = { exists = army_leader }
# 				NOT = { has_planet_flag = mmgsiege_assigning_temporary_general }
# 			}
# 			mmgsiege_assign_temporary_general = yes
# 		}
# 		# check for temporary generals that are not needed
# 		every_owned_leader = {
# 			limit = {
# 				has_trait = mmgsiege_leader_trait_temporary_general
# 				mmgsiege_general_is_on_planet_with_army_supply_shortage = no
# 			}
# 			set_leader_flag = mmgsiege_killing_temporary_general
# 			kill_leader = { show_notification = no }
# 		}
# 		# check for leaders with unneeded under supplied trait
# 		every_owned_leader = {
# 			limit = {
# 				OR = {
# 					has_trait = mmgsiege_leader_trait_under_supplied_1
# 					has_trait = mmgsiege_leader_trait_under_supplied_2
# 					has_trait = mmgsiege_leader_trait_under_supplied_3
# 					has_trait = mmgsiege_leader_trait_under_supplied_4
# 					has_trait = mmgsiege_leader_trait_under_supplied_5
# 					has_trait = mmgsiege_leader_trait_under_supplied_6
# 					has_trait = mmgsiege_leader_trait_under_supplied_7
# 					has_trait = mmgsiege_leader_trait_under_supplied_8
# 					has_trait = mmgsiege_leader_trait_under_supplied_9
# 					has_trait = mmgsiege_leader_trait_under_supplied_10
# 				}
# 				mmgsiege_general_is_on_planet_with_army_supply_shortage = no
# 			}
# 			remove_trait = mmgsiege_leader_trait_under_supplied_1
# 			remove_trait = mmgsiege_leader_trait_under_supplied_2
# 			remove_trait = mmgsiege_leader_trait_under_supplied_3
# 			remove_trait = mmgsiege_leader_trait_under_supplied_4
# 			remove_trait = mmgsiege_leader_trait_under_supplied_5
# 			remove_trait = mmgsiege_leader_trait_under_supplied_6
# 			remove_trait = mmgsiege_leader_trait_under_supplied_7
# 			remove_trait = mmgsiege_leader_trait_under_supplied_8
# 			remove_trait = mmgsiege_leader_trait_under_supplied_9
# 			remove_trait = mmgsiege_leader_trait_under_supplied_10
# 		}
# 	}
# }