namespace = uncivic_parliamentary_system

# 101 enable (scopeless)
event = {
	id = uncivic_parliamentary_system.101
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		event_target:global_event_country = {
			country_event = { id = uncivic_parliamentary_system.111 }
		}
	}
}

# 102 disable (scopeless)
event = {
	id = uncivic_parliamentary_system.102
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		event_target:global_event_country = {
			country_event = { id = uncivic_parliamentary_system.112 }
		}
	}
}

# 111 enabled
country_event = {
	id = uncivic_parliamentary_system.111
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		# nothing needed
	}
}

# 112 disabled
country_event = {
	id = uncivic_parliamentary_system.112
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		every_country = {
			every_owned_planet = {
				uncivic_parliamentary_system_clear_planet = { CLEAR_NOTIFICATIONS_PREF = yes }
			}
		}
	}
}

# 121 government added civic
country_event = {
	id = uncivic_parliamentary_system.121
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# nothing needed
	}
}

# 122 government removed civic
country_event = {
	id = uncivic_parliamentary_system.122
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_owned_planet = {
			uncivic_parliamentary_system_clear_planet = { CLEAR_NOTIFICATIONS_PREF = yes }
		}
	}
}


# 888888 88     888888  dP""b8 888888 88  dP"Yb  88b 88
# 88__   88     88__   dP   `"   88   88 dP   Yb 88Yb88
# 88""   88  .o 88""   Yb        88   88 Yb   dP 88 Y88
# 888888 88ood8 888888  YboodP   88   88  YbodP  88  Y8
#
# 888888 Yb    dP 888888 88b 88 888888 .dP"Y8
# 88__    Yb  dP  88__   88Yb88   88   `Ybo."
# 88""     YbdP   88""   88 Y88   88   o.`Y8b
# 888888    YP    888888 88  Y8   88   8bodP'

planet_event = {
	id = uncivic_parliamentary_system.201
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		exists = owner
		owner = {
			has_valid_civic = civic_parliamentary_system
			has_global_flag = uncivic_parliamentary_system_enabled
		}
		is_colony = yes
		is_under_colonization = no
		has_upgraded_capital = yes
		any_owned_species = {
			OR = {
				has_citizenship_type = {
					type = citizenship_full
					country = root.owner
				}
				has_citizenship_type = {
					type = citizenship_full_machine
					country = root.owner
				}
				has_citizenship_type = {
					type = citizenship_limited
					country = root.owner
				}
			}
		}
	}
	immediate = {
		if = {
			limit = {
				OR = {
					AND = {
						is_variable_set = uncivic_parliamentary_system_years
						check_variable = {
							which = uncivic_parliamentary_system_years
							value >= 10
						}
					}
					uncivic_parliamentary_system_has_representative = no
				}
			}
			# clear support on factions
			owner = {
				every_pop_faction = {
					set_variable = {
						which = uncivic_parliamentary_system_planet_support
						value = 0
					}
				}
			}
			# add pop power to faction
			every_owned_pop = {
				limit = { exists = pop_faction }
				pop_faction = {
					change_variable = {
						which = uncivic_parliamentary_system_planet_support
						value = prev.value:mmu_pops_political_power
					}
				}
			}
			# assign winner
			if = {
				limit = { owner = { any_pop_faction = {
					check_variable = {
						which = uncivic_parliamentary_system_planet_support
						value > 0
					}
				} } }
				owner = {
					random_pop_faction = {
						weights = {
							base = 0
							add = uncivic_parliamentary_system_planet_support
							mult = uncivic_parliamentary_system_planet_support
						}
						save_event_target_as = uncivic_parliamentary_system_winner
					}
				}
			}
			if = { # auto accept election if notifications disabled
				limit = { has_planet_flag = uncivic_parliamentary_system_notifications_disabled }
				uncivic_parliamentary_system_finalize_election = yes
			} else = { # notification event w/ chance to rig election
				set_timed_planet_flag = {
					flag = uncivic_parliamentary_system_election_in_progress
					days = 90
				}
				planet_event = { id = uncivic_parliamentary_system.202 }
			}
		} else_if = {
			limit = { is_variable_set = uncivic_parliamentary_system_years }
			change_variable = {
				which = uncivic_parliamentary_system_years
				value = 1
			}
		}
	}
}

planet_event = {
	id = uncivic_parliamentary_system.202
	is_triggered_only = yes
	title = uncivic_parliamentary_system_election
	desc = uncivic_parliamentary_system_election_desc
	picture = GFX_evt_voting
	location = this
	abort_trigger = {
		NOT = { has_planet_flag = uncivic_parliamentary_system_election_in_progress }
	}
	abort_effect = {
		uncivic_parliamentary_system_finalize_election = yes
	}
	option = {
		name = uncivic_parliamentary_system_do_not_interfere
		uncivic_parliamentary_system_finalize_election = yes
		ai_chance = {
			base = 100
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = imperialist
					owner = { is_militarist = yes }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = isolationist
					owner = { is_xenophobe = yes is_pacifist = yes }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = progressive
					owner = { is_egalitarian = yes }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = prosperity
					owner = { is_pacifist = yes }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = supremacist
					owner = { is_xenophobe = yes is_pacifist = no }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = technologist
					owner = { is_materialist = yes }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = totalitarian
					owner = { is_authoritarian = yes }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = traditionalist
					owner = { is_spiritualist = yes }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = xenoist
					owner = { is_xenophile = yes }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = capitalist
					owner = { OR = { has_ethic = ethic_competitive has_ethic = ethic_fanatic_competitive } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = conservative
					owner = { OR = { has_ethic = ethic_elitist has_ethic = ethic_fanatic_elitist } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = environmentalist
					owner = { OR = { has_ethic = ethic_ecocentric has_ethic = ethic_fanatic_ecocentric } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = industrialist
					owner = { OR = { has_ethic = ethic_anthropocentric has_ethic = ethic_fanatic_anthropocentric } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = populist
					owner = { OR = { has_ethic = ethic_pluralist has_ethic = ethic_fanatic_pluralist } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = socialist
					owner = { OR = { has_ethic = ethic_cooperative has_ethic = ethic_fanatic_cooperative } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = bankers
					owner = { OR = { has_ethic = ethic_capitalism has_ethic = ethic_fanatic_capitalism } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = conservatives
					owner = { OR = { has_ethic = ethic_elitist has_ethic = ethic_fanatic_elitist } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = environmentalists
					owner = { OR = { has_ethic = ethic_green has_ethic = ethic_fanatic_green } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = labourites
					owner = { OR = { has_ethic = ethic_pluralist has_ethic = ethic_fanatic_pluralist } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = manufacturers
					owner = { OR = { has_ethic = ethic_industrial has_ethic = ethic_fanatic_industrial } }
				}
			}
			modifier = {
				multiply = 2
				event_target:uncivic_parliamentary_system_winner = {
					is_pop_faction_type = socialists
					owner = { OR = { has_ethic = ethic_socialism has_ethic = ethic_fanatic_socialism } }
				}
			}
			modifier = {
				multiply = 2
				owner = { has_ethic = ethic_fanatic_egalitarian }
			}
			modifier = {
				divide = 5
				owner = { has_valid_civic = civic_shadow_council }
			}
		}
	}
	option = {
		name = uncivic_parliamentary_system_disable_notifications_option
		uncivic_parliamentary_system_finalize_election = yes
		custom_tooltip = uncivic_parliamentary_system_disable_notifications_effect
		hidden_effect = {
			set_planet_flag = uncivic_parliamentary_system_notifications_disabled
		}
		ai_chance = { base = 0 }
	}
	# rig election
	# standard factions
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = imperialist
		ETHIC = militarist
		OPPOSITE = pacifist
		BOOST = "has_fortress_designation = yes"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = isolationist
		ETHIC = xenophobe
		OPPOSITE = xenophile
		BOOST = "always = no"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = progressive
		ETHIC = egalitarian
		OPPOSITE = authoritarian
		BOOST = "num_pops > 100"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = prosperity
		ETHIC = pacifist
		OPPOSITE = militarist
		BOOST = "planet_stability < 40"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = supremacist
		ETHIC = xenophobe
		OPPOSITE = xenophile
		BOOST = "always = no"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = technologist
		ETHIC = materialist
		OPPOSITE = spiritualist
		BOOST = "has_research_designation = yes"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = totalitarian
		ETHIC = authoritarian
		OPPOSITE = egalitarian
		BOOST = "planet_crime >= 30"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = traditionalist
		ETHIC = spiritualist
		OPPOSITE = materialist
		BOOST = "has_unity_designation = yes"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = xenoist
		ETHIC = xenophile
		OPPOSITE = xenophobe
		BOOST = "always = no"
	}
	# special
	option = {
		name = uncivic_parliamentary_system_rig_election_for_manifesti
		trigger = { uncivic_parliamentary_system_can_rig_election = { FACTION = manifesti } }
		uncivic_parliamentary_system_rig_election = { FACTION = manifesti }
		ai_chance = { base = 0 }
	}
	# bug branch
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = capitalist
		ETHIC = competitive
		OPPOSITE = cooperative
		BOOST = "has_trade_designation = yes"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = conservative
		ETHIC = elitist
		OPPOSITE = pluralist
		BOOST = "OR = { has_rural_designation = yes has_generator_designation = yes has_farming_designation = yes }"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = environmentalist
		ETHIC = ecocentric
		OPPOSITE = anthropocentric
		BOOST = "always = no"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = industrialist
		ETHIC = anthropocentric
		OPPOSITE = ecocentric
		BOOST = "OR = { has_foundry_designation = yes has_factory_designation = yes has_industrial_designation = yes }"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = populist
		ETHIC = pluralist
		OPPOSITE = elitist
		BOOST = "AND = { planet_stability < 50 OR = { has_mining_designation = yes has_generator_designation = yes has_farming_designation = yes has_rural_designation = yes } }"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = socialist
		ETHIC = cooperative
		OPPOSITE = competitive
		BOOST = "free_amenities < 0"
	}
	# evolved/classic
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = bankers
		ETHIC = capitalism
		OPPOSITE = socialism
		BOOST = "has_trade_designation = yes"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = conservatives
		ETHIC = elitist
		OPPOSITE = pluralist
		BOOST = "OR = { has_rural_designation = yes has_generator_designation = yes has_farming_designation = yes }"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = environmentalists
		ETHIC = green
		OPPOSITE = industrial
		BOOST = "always = no"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = manufacturers
		ETHIC = industrial
		OPPOSITE = green
		BOOST = "OR = { has_foundry_designation = yes has_factory_designation = yes has_industrial_designation = yes }"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = labourites
		ETHIC = pluralist
		OPPOSITE = elitist
		BOOST = "AND = { planet_stability < 50 OR = { has_mining_designation = yes has_generator_designation = yes has_farming_designation = yes has_rural_designation = yes } }"
	}
	inline_script = {
		script = uncivic_parliamentary_system_rig_election
		FACTION = socialists
		ETHIC = socialism
		OPPOSITE = capitalism
		BOOST = "free_amenities < 0"
	}
}

#  dP""b8 88     888888    db    88b 88 88   88 88""Yb
# dP   `" 88     88__     dPYb   88Yb88 88   88 88__dP
# Yb      88  .o 88""    dP__Yb  88 Y88 Y8   8P 88"""
#  YboodP 88ood8 888888 dP""""Yb 88  Y8 `YbodP' 88
#
# 888888 Yb    dP 888888 88b 88 888888 .dP"Y8
# 88__    Yb  dP  88__   88Yb88   88   `Ybo."
# 88""     YbdP   88""   88 Y88   88   o.`Y8b
# 888888    YP    888888 88  Y8   88   8bodP'

# monthly check for planets in parliamentary empires that are no longer eligible
# (no upgraded capital, or no species with residency/citizenship)
country_event = {
	id = uncivic_parliamentary_system.301
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		owner = {
			has_valid_civic = civic_parliamentary_system
			has_global_flag = uncivic_parliamentary_system_enabled
		}
	}
	immediate = {
		every_owned_planet = {
			limit = {
				NAND = {
					has_upgraded_capital = yes
					any_owned_species = {
						OR = {
							has_citizenship_type = {
								type = citizenship_full
								country = root.owner
							}
							has_citizenship_type = {
								type = citizenship_full_machine
								country = root.owner
							}
							has_citizenship_type = {
								type = citizenship_limited
								country = root.owner
							}
						}
					}
				}
			}
			uncivic_parliamentary_system_clear_planet = yes
		}
	}
}

# on_planet_transfer on_planet_ownerless
planet_event = {
	id = uncivic_parliamentary_system.311
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		uncivic_parliamentary_system_has_representative = yes
	}
	immediate = {
		uncivic_parliamentary_system_clear_planet = { CLEAR_NOTIFICATIONS_PREF = yes }
	}
}

# uncivic_on_leader_converted
# this = cloned leader with new leader class
# from = old leader about to be fired
leader_event = {
	id = uncivic_parliamentary_system.321
	hide_window = yes
	is_triggered_only = yes
	trigger = { from = { has_leader_flag = uncivic_shadow_council_shadow_councilor } }
	immediate = {
		set_leader_flag = uncivic_shadow_council_shadow_councilor
	}
}